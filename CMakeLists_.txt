cmake_minimum_required(VERSION 3.15)
project(Cutie_demo C CXX)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# add_compile_options(-Werror -Wall)

set(CUTIE_GTEST_XML ON)
set(CUTIE_GTEST_JSON ON)

include(cmake/get_cpm.cmake)
include(cmake/CPM.cmake)

CPMAddPackage(
  NAME cutie
  GITHUB_REPOSITORY nboutin/Cutie
  VERSION 1.3.0
)

get_filename_component(CUTIE_DIR ${cutie_SOURCE_DIR} REALPATH)
include(${cutie_SOURCE_DIR}/cutie.cmake)

add_cutie_test_target(
  TEST demo2/comp_b/test/test_comp_b.cpp
  SOURCES demo2/comp_b/comp_b.c
  INCLUDE_DIRECTORIES demo2/comp_b
  LINK_LIBRARIES comp_a
)

add_subdirectory(demo1)
add_subdirectory(googlemock_demo)

add_cutie_all_tests_target()

if (NOT CMAKE_HOST_WIN32)
  add_cutie_coverage_targets() # Uses lcov
endif()

add_cutie_coverage_gcovr_targets()
add_cutie_coverage_gcovr_html_targets()

# --- Build User library

add_subdirectory(demo2/comp_a)
